micronaut:
  application:
    name: airquality
  router:
    static-resources:
      swagger:
        paths: classpath:META-INF/swagger
        mapping: /swagger/**
      swagger-ui:
        paths: classpath:META-INF/swagger/views/swagger-ui
        mapping: /swagger-ui/**
      rapidoc:
        paths: classpath:META-INF/swagger/views/rapidoc
        mapping: /rapidoc/**
datasources:
  default:
    url: ${JDBC_URL}
    driverClassName: org.postgresql.Driver
    username: ${POSTGRES_USER:postgres}
    password: ${POSTGRES_PASSWORD:password}
    dialect: POSTGRES
jpa:
  default:
    properties:
      hibernate:
        generate_statistics: true
        hbm2ddl:
          auto: none
        show_sql: false
flyway:
  datasources:
    default:
      enabled: true
netty:
  default:
    allocator:
      max-order: 3
  security:
    authentication: idtoken
    oauth2:
      clients:
        keycloak:
          client-id: airBackEnd
          openid:
            issuer: http://localhost:8888/auth/realms/airqualityVueJs
    token:
      jwt:
        enabled: true
        signatures:
          jwks:
            keycloak:
              url: http://localhost:8888/auth/realms/airqualityVueJs/protocol/openid-connect/certs
    intercept-url-map:
      - pattern: /swagger/**
        httpMethod: GET
        access:
          - isAnonymous()
      - pattern: /swagger-ui/**
        httpMethod: GET
        access:
          - isAnonymous()
      - pattern: /rapidoc/**
        httpMethod: GET
        access:
          - isAnonymous()
      - pattern: /metrics/**
        httpMethod: GET
        access:
          - isAnonymous()
      - pattern: /prometheus/**
        httpMethod: GET
        access:
          - isAnonymous()
      - pattern: /health
        httpMethod: GET
        access:
          - isAnonymous()