plugins {
    id("com.github.johnrengelman.shadow") version "7.1.2"
    id("io.micronaut.application") version "3.6.2"
    id("io.micronaut.test-resources") version "3.6.2"
}

version = "0.1"
group = "it.unipv"

repositories {
    mavenCentral()
}

dependencies {
    implementation 'builders.dsl:spreadsheet-builder-poi:3.0.1'

    annotationProcessor("org.projectlombok:lombok")
    annotationProcessor("io.micronaut.openapi:micronaut-openapi:4.5.2")
    implementation("io.swagger.core.v3:swagger-annotations")

    implementation("io.micronaut:micronaut-http-client")
    implementation("io.micronaut:micronaut-jackson-databind")
    implementation("io.micronaut.flyway:micronaut-flyway")
    implementation("io.micronaut.sql:micronaut-jdbc-hikari")
    implementation("io.swagger.core.v3:swagger-annotations")
    implementation("jakarta.annotation:jakarta.annotation-api")
    compileOnly("org.projectlombok:lombok")
    runtimeOnly("org.postgresql:postgresql")
    implementation("io.micronaut:micronaut-validation")

   // implementation("io.micronaut.security:micronaut-security-jwt")
  //  implementation("io.micronaut.security:micronaut-security-oauth2")


    // map struct
    implementation 'org.mapstruct:mapstruct:1.5.2.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.2.Final'

    implementation 'io.micronaut:micronaut-inject-java:3.7.2'
    annotationProcessor("io.micronaut:micronaut-inject-java:3.7.2")

    annotationProcessor("org.projectlombok:lombok")


    annotationProcessor("io.micronaut:micronaut-http-validation")
    annotationProcessor("io.micronaut.openapi:micronaut-openapi")
    annotationProcessor("io.micronaut.data:micronaut-data-processor")
    implementation("io.micronaut:micronaut-http-client")
    implementation("io.micronaut.data:micronaut-data-hibernate-jpa")
    implementation("io.micronaut:micronaut-jackson-databind")
    implementation("io.micronaut.flyway:micronaut-flyway")
    implementation("io.micronaut.sql:micronaut-hibernate-jpa")
    implementation("io.micronaut.sql:micronaut-jdbc-hikari")
    implementation("io.swagger.core.v3:swagger-annotations")
    implementation("jakarta.annotation:jakarta.annotation-api")
    runtimeOnly("ch.qos.logback:logback-classic")
    compileOnly("org.projectlombok:lombok")
    runtimeOnly("org.postgresql:postgresql")
    testImplementation("org.testcontainers:junit-jupiter")
    testImplementation("org.testcontainers:postgresql")
    testImplementation("org.testcontainers:testcontainers")
    implementation("io.micronaut:micronaut-validation:3.7.0")
    implementation("io.micronaut:micronaut-aop:3.7.0")
    testImplementation("org.mockito:mockito-core")
    implementation("io.micronaut.rxjava3:micronaut-rxjava3:2.3.0")
    implementation("io.micronaut.rxjava3:micronaut-rxjava3-http-client:2.3.0")



}


application {
    mainClass.set("it.unipv.Application")
}
java {
    sourceCompatibility = JavaVersion.toVersion("11")
    targetCompatibility = JavaVersion.toVersion("11")
}

graalvmNative.toolchainDetection = false
micronaut {
    runtime("netty")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("it.unipv.*")
    }
    testResources {
        additionalModules.add("jdbc-postgresql")
    }
}


tasks.withType(JavaCompile) {
    options.fork = true
    options.forkOptions.jvmArgs << '-Dmicronaut.openapi.views.spec=rapidoc.enabled=true,swagger-ui.enabled=true,swagger-ui.theme=flattop,swagger-ui.oauth2RedirectUrl=http://localhost:8080/swagger-ui/oauth2-redirect.html'
}


